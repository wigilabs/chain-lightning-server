{"version":3,"file":"static\\development\\pages\\api\\splunk-events.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/api/splunk-events.js","webpack:///external \"micro-cors\"","webpack:///external \"superagent\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import Cors from 'micro-cors'\r\n\r\nconst cors = Cors()\r\n\r\nconst superagent = require('superagent');\r\nconst handler = (req, res) => {\r\n  let events\r\n  superagent\r\n    .get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT+%60_raw%60%2C%60_sourcetype%60%2C%60source%60+FROM+splunkUpdateLogs%2C+splunkApacheAccess%2C+splunkApacheErrors%2C+splunkAuthLogs%2C+splunkHttp%2C+splunkKernel%2C+splunkSystemctl+WHERE+%60_raw%60+NOT+LIKE+%27%25CRON%25%27+LIMIT+6+')\r\n    .set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd')\r\n    .set('Accept', 'application/json')\r\n    .end((err, response) => {\r\n      events = JSON.parse(response.text).results[0].events;\r\n      let name1=events[0]._sourcetype;\r\n      let eval1=events[0]._raw;\r\n      let value1=eval1.includes('not found or unable to stat') || eval1.includes('[:error]') || eval1.includes('deprecated') || eval1.includes('invalid') || eval1.includes('error') ? 0 : 1\r\n      let name2=events[1]._sourcetype;\r\n      let eval2=events[1]._raw;\r\n      let value2=eval2.includes('not found or unable to stat') || eval2.includes('[:error]') || eval2.includes('deprecated') || eval2.includes('invalid') || eval2.includes('error') ? 0 : 1\r\n      let name3=events[2]._sourcetype;\r\n      let eval3=events[2]._raw;\r\n      let value3=eval3.includes('not found or unable to stat') || eval3.includes('[:error]') || eval3.includes('deprecated') || eval3.includes('invalid') || eval3.includes('error') ? 0 : 1\r\n      let name4=events[3]._sourcetype;\r\n      let eval4=events[3]._raw;\r\n      let value4=eval4.includes('not found or unable to stat') || eval4.includes('[:error]') || eval4.includes('deprecated') || eval4.includes('invalid') || eval4.includes('error') ? 0 : 1\r\n      let name5=events[4]._sourcetype;\r\n      let eval5=events[4]._raw;\r\n      let value5=eval5.includes('not found or unable to stat') || eval5.includes('[:error]') || eval5.includes('deprecated') || eval5.includes('invalid') || eval5.includes('error') ? 0 : 1\r\n      let name6=events[5]._sourcetype;\r\n      let eval6=events[5]._raw;\r\n      let value6=eval6.includes('not found or unable to stat') || eval6.includes('[:error]') || eval6.includes('deprecated') || eval6.includes('invalid') || eval6.includes('error') ? 0 : 1\r\n\r\n      let parsed = [\r\n        { name: name1,    value: value1,     msg: eval1 },\r\n        { name: name2,    value: value2,     msg: eval2 },\r\n        { name: name3,    value: value3,     msg: eval3 },\r\n        { name: name4,    value: value4,     msg: eval4 },\r\n        { name: name5,    value: value5,     msg: eval5 },\r\n        { name: name6,    value: value6,     msg: eval6 }\r\n      ]\r\n      \r\n      console.log(parsed);\r\n      return res.json(parsed);\r\n    });\r\n};\r\n\r\nexport default cors(handler);\r\n","module.exports = require(\"micro-cors\");","module.exports = require(\"superagent\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9CA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}