{"ast":null,"code":"const superagent = require('superagent');\n\nfunction getState(s) {\n  console.log('getState: ');\n  if (s.includes('CRITICAL')) return 0;\n  if (s.includes('WARNING')) return 1;\n  return 2;\n}\n\nconst handler = (req, res) => {\n  let events;\n  superagent.get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT+*+FROM+NagiosReport').set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd').set('Accept', 'application/json').end((err, response) => {\n    events = JSON.parse(response.text).results[0].events;\n    let dObj = events[0];\n    let value_load = dObj['Current Load\\n'].includes('CRITICAL') || dObj['Current Load\\n'].includes('WARNING') || dObj['Current Load\\n'].includes('WARNING:') ? 0 : 1;\n    let value_users = dObj['Current Users\\n'].includes('CRITICAL') || dObj['Current Users\\n'].includes('WARNING') || dObj['Current Users\\n'].includes('WARNING:') ? 0 : 1;\n    let value_http = dObj['HTTP\\n'].includes('CRITICAL') || dObj['HTTP\\n'].includes('WARNING') || dObj['HTTP\\n'].includes('WARNING:') ? 0 : 1;\n    let ping_value = dObj['PING\\n'].includes('CRITICAL') || dObj['PING\\n'].includes('WARNING') || dObj['PING\\n'].includes('WARNING:') ? 0 : 1;\n    let root_partition = dObj['Root Partition\\n'].includes('CRITICAL') || dObj['Root Partition\\n'].includes('WARNING') || dObj['Root Partition\\n'].includes('WARNING:') ? 0 : 1;\n    let ssh_value = dObj['SSH\\n'].includes('CRITICAL') || dObj['SSH\\n'].includes('WARNING') || dObj['SSH\\n'].includes('WARNING:') ? 0 : 1;\n    let swap_value = dObj['Swap Usage\\n'].includes('CRITICAL') || dObj['Swap Usage\\n'].includes('WARNING') || dObj['Swap Usage\\n'].includes('WARNING:') ? 0 : 1;\n    let total_value = dObj['Total Processes\\n'].includes('CRITICAL') || dObj['Total Processes\\n'].includes('WARNING') || dObj['Total Processes\\n'].includes('WARNING:') ? 0 : 1; // calculate states\n\n    let state_load = getState(dObj['Current Load\\n']);\n    let state_users = getState(dObj['Current Users\\n']);\n    let state_http = getState(dObj['HTTP\\n']);\n    let state_ping = getState(dObj['PING\\n']);\n    let state_root = getState(dObj['Root Partition\\n']);\n    let state_ssh = getState(dObj['SSH\\n']);\n    let state_swap = getState(dObj['Swap Usage\\n']);\n    let state_total = getState(dObj['Total Processes\\n']); //detalles\n\n    let detail_load = dObj['Current Load\\n'];\n    let detail_users = dObj['Current Users\\n'];\n    let detail_http = dObj['HTTP\\n'];\n    let detail_ping = dObj['PING\\n'];\n    let detail_root_patition = dObj['Root Partition\\n'];\n    let detail_ssh = dObj['SSH\\n'];\n    let detail_swap = dObj['Swap Usage\\n'];\n    let detail_total = dObj['Total Processes\\n']; //final object\n\n    events = [{\n      name: 'Current Load',\n      value: value_load,\n      msg: detail_load,\n      state: state_load\n    }, {\n      name: 'Current Users',\n      value: value_users,\n      msg: detail_users,\n      state: state_users\n    }, {\n      name: 'HTTP',\n      value: value_http,\n      msg: detail_http,\n      state: state_http\n    }, {\n      name: 'PING',\n      value: ping_value,\n      msg: detail_ping,\n      state: state_ping\n    }, {\n      name: 'Root Partition',\n      value: root_partition,\n      msg: detail_root_patition,\n      state: state_root\n    }, {\n      name: 'SSH',\n      value: ssh_value,\n      msg: detail_ssh,\n      state: state_ssh\n    }, {\n      name: 'Swap Usage',\n      value: swap_value,\n      msg: detail_swap,\n      state: state_swap\n    }, {\n      name: 'Total Processes',\n      value: total_value,\n      msg: detail_total,\n      state: state_total\n    }];\n    events.sort(function (a, b) {\n      return a.state - b.state;\n    });\n    return res.json(events);\n  });\n};\n\nexport default handler;","map":{"version":3,"sources":["/Users/diterevan/Documents/projects/chain-lightning-server/pages/api/nagios-events.js"],"names":["superagent","require","getState","s","console","log","includes","handler","req","res","events","get","set","end","err","response","JSON","parse","text","results","dObj","value_load","value_users","value_http","ping_value","root_partition","ssh_value","swap_value","total_value","state_load","state_users","state_http","state_ping","state_root","state_ssh","state_swap","state_total","detail_load","detail_users","detail_http","detail_ping","detail_root_patition","detail_ssh","detail_swap","detail_total","name","value","msg","state","sort","a","b","json"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,MAAGF,CAAC,CAACG,QAAF,CAAW,UAAX,CAAH,EAA2B,OAAO,CAAP;AAC3B,MAAGH,CAAC,CAACG,QAAF,CAAW,SAAX,CAAH,EAA0B,OAAO,CAAP;AAC1B,SAAO,CAAP;AACD;;AAED,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAIC,MAAJ;AACAV,EAAAA,UAAU,CACPW,GADH,CACO,6FADP,EAEGC,GAFH,CAEO,aAFP,EAEsB,uCAFtB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,GAJH,CAIO,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACtBL,IAAAA,MAAM,GAAGM,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAApB,EAA0BC,OAA1B,CAAkC,CAAlC,EAAqCT,MAA9C;AACA,QAAIU,IAAI,GAACV,MAAM,CAAC,CAAD,CAAf;AAEA,QAAIW,UAAU,GAACD,IAAI,CAAC,gBAAD,CAAJ,CAAuBd,QAAvB,CAAgC,UAAhC,KAA+Cc,IAAI,CAAC,gBAAD,CAAJ,CAAuBd,QAAvB,CAAgC,SAAhC,CAA/C,IAA6Fc,IAAI,CAAC,gBAAD,CAAJ,CAAuBd,QAAvB,CAAgC,UAAhC,CAA7F,GAA2I,CAA3I,GAA+I,CAA9J;AACA,QAAIgB,WAAW,GAACF,IAAI,CAAC,iBAAD,CAAJ,CAAwBd,QAAxB,CAAiC,UAAjC,KAAgDc,IAAI,CAAC,iBAAD,CAAJ,CAAwBd,QAAxB,CAAiC,SAAjC,CAAhD,IAA+Fc,IAAI,CAAC,iBAAD,CAAJ,CAAwBd,QAAxB,CAAiC,UAAjC,CAA/F,GAA8I,CAA9I,GAAkJ,CAAlK;AACA,QAAIiB,UAAU,GAACH,IAAI,CAAC,QAAD,CAAJ,CAAed,QAAf,CAAwB,UAAxB,KAAuCc,IAAI,CAAC,QAAD,CAAJ,CAAed,QAAf,CAAwB,SAAxB,CAAvC,IAA6Ec,IAAI,CAAC,QAAD,CAAJ,CAAed,QAAf,CAAwB,UAAxB,CAA7E,GAAmH,CAAnH,GAAuH,CAAtI;AACA,QAAIkB,UAAU,GAACJ,IAAI,CAAC,QAAD,CAAJ,CAAed,QAAf,CAAwB,UAAxB,KAAuCc,IAAI,CAAC,QAAD,CAAJ,CAAed,QAAf,CAAwB,SAAxB,CAAvC,IAA6Ec,IAAI,CAAC,QAAD,CAAJ,CAAed,QAAf,CAAwB,UAAxB,CAA7E,GAAmH,CAAnH,GAAuH,CAAtI;AACA,QAAImB,cAAc,GAACL,IAAI,CAAC,kBAAD,CAAJ,CAAyBd,QAAzB,CAAkC,UAAlC,KAAiDc,IAAI,CAAC,kBAAD,CAAJ,CAAyBd,QAAzB,CAAkC,SAAlC,CAAjD,IAAiGc,IAAI,CAAC,kBAAD,CAAJ,CAAyBd,QAAzB,CAAkC,UAAlC,CAAjG,GAAiJ,CAAjJ,GAAqJ,CAAxK;AACA,QAAIoB,SAAS,GAACN,IAAI,CAAC,OAAD,CAAJ,CAAcd,QAAd,CAAuB,UAAvB,KAAsCc,IAAI,CAAC,OAAD,CAAJ,CAAcd,QAAd,CAAuB,SAAvB,CAAtC,IAA2Ec,IAAI,CAAC,OAAD,CAAJ,CAAcd,QAAd,CAAuB,UAAvB,CAA3E,GAAgH,CAAhH,GAAoH,CAAlI;AACA,QAAIqB,UAAU,GAACP,IAAI,CAAC,cAAD,CAAJ,CAAqBd,QAArB,CAA8B,UAA9B,KAA6Cc,IAAI,CAAC,cAAD,CAAJ,CAAqBd,QAArB,CAA8B,SAA9B,CAA7C,IAAyFc,IAAI,CAAC,cAAD,CAAJ,CAAqBd,QAArB,CAA8B,UAA9B,CAAzF,GAAqI,CAArI,GAAyI,CAAxJ;AACA,QAAIsB,WAAW,GAACR,IAAI,CAAC,mBAAD,CAAJ,CAA0Bd,QAA1B,CAAmC,UAAnC,KAAkDc,IAAI,CAAC,mBAAD,CAAJ,CAA0Bd,QAA1B,CAAmC,SAAnC,CAAlD,IAAmGc,IAAI,CAAC,mBAAD,CAAJ,CAA0Bd,QAA1B,CAAmC,UAAnC,CAAnG,GAAoJ,CAApJ,GAAwJ,CAAxK,CAXsB,CAatB;;AACA,QAAIuB,UAAU,GAAG3B,QAAQ,CAACkB,IAAI,CAAC,gBAAD,CAAL,CAAzB;AACA,QAAIU,WAAW,GAAG5B,QAAQ,CAACkB,IAAI,CAAC,iBAAD,CAAL,CAA1B;AACA,QAAIW,UAAU,GAAG7B,QAAQ,CAACkB,IAAI,CAAC,QAAD,CAAL,CAAzB;AACA,QAAIY,UAAU,GAAG9B,QAAQ,CAACkB,IAAI,CAAC,QAAD,CAAL,CAAzB;AACA,QAAIa,UAAU,GAAG/B,QAAQ,CAACkB,IAAI,CAAC,kBAAD,CAAL,CAAzB;AACA,QAAIc,SAAS,GAAGhC,QAAQ,CAACkB,IAAI,CAAC,OAAD,CAAL,CAAxB;AACA,QAAIe,UAAU,GAAGjC,QAAQ,CAACkB,IAAI,CAAC,cAAD,CAAL,CAAzB;AACA,QAAIgB,WAAW,GAAGlC,QAAQ,CAACkB,IAAI,CAAC,mBAAD,CAAL,CAA1B,CArBsB,CAuBvB;;AACA,QAAIiB,WAAW,GAACjB,IAAI,CAAC,gBAAD,CAApB;AACA,QAAIkB,YAAY,GAAClB,IAAI,CAAC,iBAAD,CAArB;AACA,QAAImB,WAAW,GAACnB,IAAI,CAAC,QAAD,CAApB;AACA,QAAIoB,WAAW,GAACpB,IAAI,CAAC,QAAD,CAApB;AACA,QAAIqB,oBAAoB,GAACrB,IAAI,CAAC,kBAAD,CAA7B;AACA,QAAIsB,UAAU,GAACtB,IAAI,CAAC,OAAD,CAAnB;AACA,QAAIuB,WAAW,GAACvB,IAAI,CAAC,cAAD,CAApB;AACA,QAAIwB,YAAY,GAACxB,IAAI,CAAC,mBAAD,CAArB,CA/BuB,CAiCvB;;AACCV,IAAAA,MAAM,GAAG,CACP;AAAEmC,MAAAA,IAAI,EAAE,cAAR;AAA2BC,MAAAA,KAAK,EAAEzB,UAAlC;AAAkD0B,MAAAA,GAAG,EAAEV,WAAvD;AAA6EW,MAAAA,KAAK,EAAEnB;AAApF,KADO,EAEP;AAAEgB,MAAAA,IAAI,EAAE,eAAR;AAA2BC,MAAAA,KAAK,EAAExB,WAAlC;AAAkDyB,MAAAA,GAAG,EAAET,YAAvD;AAA6EU,MAAAA,KAAK,EAAElB;AAApF,KAFO,EAGP;AAAEe,MAAAA,IAAI,EAAE,MAAR;AAA2BC,MAAAA,KAAK,EAAEvB,UAAlC;AAAkDwB,MAAAA,GAAG,EAAER,WAAvD;AAA6ES,MAAAA,KAAK,EAAEjB;AAApF,KAHO,EAIP;AAAEc,MAAAA,IAAI,EAAE,MAAR;AAA2BC,MAAAA,KAAK,EAAEtB,UAAlC;AAAkDuB,MAAAA,GAAG,EAAEP,WAAvD;AAA6EQ,MAAAA,KAAK,EAAEhB;AAApF,KAJO,EAKP;AAAEa,MAAAA,IAAI,EAAE,gBAAR;AAA2BC,MAAAA,KAAK,EAAErB,cAAlC;AAAkDsB,MAAAA,GAAG,EAAEN,oBAAvD;AAA6EO,MAAAA,KAAK,EAAEf;AAApF,KALO,EAMP;AAAEY,MAAAA,IAAI,EAAE,KAAR;AAA2BC,MAAAA,KAAK,EAAEpB,SAAlC;AAAkDqB,MAAAA,GAAG,EAAEL,UAAvD;AAA6EM,MAAAA,KAAK,EAAEd;AAApF,KANO,EAOP;AAAEW,MAAAA,IAAI,EAAE,YAAR;AAA2BC,MAAAA,KAAK,EAAEnB,UAAlC;AAAkDoB,MAAAA,GAAG,EAAEJ,WAAvD;AAA6EK,MAAAA,KAAK,EAAEb;AAApF,KAPO,EAQP;AAAEU,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,KAAK,EAAElB,WAAlC;AAAkDmB,MAAAA,GAAG,EAAEH,YAAvD;AAA6EI,MAAAA,KAAK,EAAEZ;AAApF,KARO,CAAT;AAWA1B,IAAAA,MAAM,CAACuC,IAAP,CAAY,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAAE,aAAOD,CAAC,CAACF,KAAF,GAAUG,CAAC,CAACH,KAAnB;AAA0B,KAAvD;AAEA,WAAOvC,GAAG,CAAC2C,IAAJ,CAAS1C,MAAT,CAAP;AACD,GApDH;AAqDD,CAvDD;;AAwDA,eAAeH,OAAf","sourcesContent":["const superagent = require('superagent');\n\nfunction getState(s) {\n  console.log('getState: ')\n  if(s.includes('CRITICAL')) return 0\n  if(s.includes('WARNING')) return 1\n  return 2\n}\n\nconst handler = (req, res) => {\n  let events\n  superagent\n    .get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT+*+FROM+NagiosReport')\n    .set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd')\n    .set('Accept', 'application/json')\n    .end((err, response) => {\n      events = JSON.parse(response.text).results[0].events\n      let dObj=events[0]\n\n      let value_load=dObj['Current Load\\n'].includes('CRITICAL') || dObj['Current Load\\n'].includes('WARNING') || dObj['Current Load\\n'].includes('WARNING:') ? 0 : 1\n      let value_users=dObj['Current Users\\n'].includes('CRITICAL') || dObj['Current Users\\n'].includes('WARNING') || dObj['Current Users\\n'].includes('WARNING:') ? 0 : 1;\n      let value_http=dObj['HTTP\\n'].includes('CRITICAL') || dObj['HTTP\\n'].includes('WARNING') || dObj['HTTP\\n'].includes('WARNING:') ? 0 : 1;\n      let ping_value=dObj['PING\\n'].includes('CRITICAL') || dObj['PING\\n'].includes('WARNING') || dObj['PING\\n'].includes('WARNING:') ? 0 : 1;\n      let root_partition=dObj['Root Partition\\n'].includes('CRITICAL') || dObj['Root Partition\\n'].includes('WARNING') || dObj['Root Partition\\n'].includes('WARNING:') ? 0 : 1;\n      let ssh_value=dObj['SSH\\n'].includes('CRITICAL') || dObj['SSH\\n'].includes('WARNING') || dObj['SSH\\n'].includes('WARNING:') ? 0 : 1;\n      let swap_value=dObj['Swap Usage\\n'].includes('CRITICAL') || dObj['Swap Usage\\n'].includes('WARNING') || dObj['Swap Usage\\n'].includes('WARNING:') ? 0 : 1;\n      let total_value=dObj['Total Processes\\n'].includes('CRITICAL') || dObj['Total Processes\\n'].includes('WARNING') || dObj['Total Processes\\n'].includes('WARNING:') ? 0 : 1;\n\n      // calculate states\n      let state_load = getState(dObj['Current Load\\n'])\n      let state_users = getState(dObj['Current Users\\n'])\n      let state_http = getState(dObj['HTTP\\n'])\n      let state_ping = getState(dObj['PING\\n'])\n      let state_root = getState(dObj['Root Partition\\n'])\n      let state_ssh = getState(dObj['SSH\\n'])\n      let state_swap = getState(dObj['Swap Usage\\n'])\n      let state_total = getState(dObj['Total Processes\\n'])\n\n  \t  //detalles\n  \t  let detail_load=dObj['Current Load\\n'];\n  \t  let detail_users=dObj['Current Users\\n'];\n  \t  let detail_http=dObj['HTTP\\n'];\n  \t  let detail_ping=dObj['PING\\n'];\n  \t  let detail_root_patition=dObj['Root Partition\\n'];\n  \t  let detail_ssh=dObj['SSH\\n'];\n  \t  let detail_swap=dObj['Swap Usage\\n'];\n  \t  let detail_total=dObj['Total Processes\\n'];\n\n  \t  //final object\n      events = [\n        { name: 'Current Load',    value: value_load,     msg: detail_load,          state: state_load  },\n        { name: 'Current Users',   value: value_users,    msg: detail_users,         state: state_users },\n        { name: 'HTTP',            value: value_http,     msg: detail_http,          state: state_http  },\n        { name: 'PING',            value: ping_value,     msg: detail_ping,          state: state_ping  },\n        { name: 'Root Partition',  value: root_partition, msg: detail_root_patition, state: state_root  },\n        { name: 'SSH',             value: ssh_value,      msg: detail_ssh,           state: state_ssh   },\n        { name: 'Swap Usage',      value: swap_value,     msg: detail_swap,          state: state_swap  },\n        { name: 'Total Processes', value: total_value,    msg: detail_total,         state: state_total },\n      ]\n\n      events.sort(function(a, b) { return a.state - b.state });\n\n      return res.json(events);\n    });\n};\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}