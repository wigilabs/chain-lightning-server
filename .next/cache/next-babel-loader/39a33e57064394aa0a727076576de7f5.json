{"ast":null,"code":"import Cors from 'micro-cors';\nconst cors = Cors();\n\nconst superagent = require('superagent');\n\nfunction getState(s) {\n  console.log('getState: ');\n  if (s.includes('CRITICAL')) return 0;\n  if (s.includes('WARNING')) return 1;\n  return 2;\n}\n\nconst handler = (req, res) => {\n  let events;\n  superagent.get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT+*+FROM+NagiosReport+SINCE+5+minutes+ago').set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd').set('Accept', 'application/json').end((err, response) => {\n    events = JSON.parse(response.text).results[0].events;\n    let dObj = events[0];\n    let value_load = dObj['Current Load\\n'].includes('CRITICAL') || dObj['Current Load\\n'].includes('WARNING') || dObj['Current Load\\n'].includes('WARNING:') ? 0 : 1;\n    let value_users = dObj['Current Users\\n'].includes('CRITICAL') || dObj['Current Users\\n'].includes('WARNING') || dObj['Current Users\\n'].includes('WARNING:') ? 0 : 1;\n    let value_http = dObj['HTTP\\n'].includes('CRITICAL') || dObj['HTTP\\n'].includes('WARNING') || dObj['HTTP\\n'].includes('WARNING:') ? 0 : 1;\n    let ping_value = dObj['PING\\n'].includes('CRITICAL') || dObj['PING\\n'].includes('WARNING') || dObj['PING\\n'].includes('WARNING:') ? 0 : 1;\n    let root_partition = dObj['Root Partition\\n'].includes('CRITICAL') || dObj['Root Partition\\n'].includes('WARNING') || dObj['Root Partition\\n'].includes('WARNING:') ? 0 : 1;\n    let ssh_value = dObj['SSH\\n'].includes('CRITICAL') || dObj['SSH\\n'].includes('WARNING') || dObj['SSH\\n'].includes('WARNING:') ? 0 : 1;\n    let swap_value = dObj['Swap Usage\\n'].includes('CRITICAL') || dObj['Swap Usage\\n'].includes('WARNING') || dObj['Swap Usage\\n'].includes('WARNING:') ? 0 : 1;\n    let total_value = dObj['Total Processes\\n'].includes('CRITICAL') || dObj['Total Processes\\n'].includes('WARNING') || dObj['Total Processes\\n'].includes('WARNING:') ? 0 : 1; // calculate states\n\n    let state_load = getState(dObj['Current Load\\n']);\n    let state_users = getState(dObj['Current Users\\n']);\n    let state_http = getState(dObj['HTTP\\n']);\n    let state_ping = getState(dObj['PING\\n']);\n    let state_root = getState(dObj['Root Partition\\n']);\n    let state_ssh = getState(dObj['SSH\\n']);\n    let state_swap = getState(dObj['Swap Usage\\n']);\n    let state_total = getState(dObj['Total Processes\\n']); //detalles\n\n    let detail_load = dObj['Current Load\\n'];\n    let detail_users = dObj['Current Users\\n'];\n    let detail_http = dObj['HTTP\\n'];\n    let detail_ping = dObj['PING\\n'];\n    let detail_root_patition = dObj['Root Partition\\n'];\n    let detail_ssh = dObj['SSH\\n'];\n    let detail_swap = dObj['Swap Usage\\n'];\n    let detail_total = dObj['Total Processes\\n']; //final object\n\n    events = [{\n      name: 'Current Load',\n      value: value_load,\n      msg: detail_load,\n      state: state_load\n    }, {\n      name: 'Current Users',\n      value: value_users,\n      msg: detail_users,\n      state: state_users\n    }, {\n      name: 'HTTP',\n      value: value_http,\n      msg: detail_http,\n      state: state_http\n    }, {\n      name: 'PING',\n      value: ping_value,\n      msg: detail_ping,\n      state: state_ping\n    }, {\n      name: 'Root Partition',\n      value: root_partition,\n      msg: detail_root_patition,\n      state: state_root\n    }, {\n      name: 'SSH',\n      value: ssh_value,\n      msg: detail_ssh,\n      state: state_ssh\n    }, {\n      name: 'Swap Usage',\n      value: swap_value,\n      msg: detail_swap,\n      state: state_swap\n    }, {\n      name: 'Total Processes',\n      value: total_value,\n      msg: detail_total,\n      state: state_total\n    }];\n    events.sort(function (a, b) {\n      return a.state - b.state;\n    });\n    return res.json(events);\n  });\n}; // export default handler;\n\n\nexport default cors(handler);","map":null,"metadata":{},"sourceType":"module"}