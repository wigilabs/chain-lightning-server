{"ast":null,"code":"const superagent = require('superagent');\n\nconst handler = (req, res) => {\n  let events;\n  superagent.get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT%20description%20FROM%20ZabbixAgent,%20ZabbixHTTP,%20ZabbixSSH%20limit%203').set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd').set('Accept', 'application/json').end((err, response) => {\n    events = JSON.parse(response.text).results[0].events;\n    console.log('events: ', events);\n    let valueSSH = events[0].description.includes('is unreachable') ? 0 : 1;\n    let valueHTTP = events[1].description.includes('is unreachable') ? 0 : 1;\n    let valueHost = events[2].description.includes('is unreachable') ? 0 : 1;\n    console.log('valueSSH: ', valueSSH, 'msg:', events[0].description);\n    console.log('valueHTTP: ', valueHTTP, 'msg:', events[1].description);\n    console.log('valueHost: ', valueHost, 'msg:', events[2].description);\n    let ret = [{\n      name: 'SSH',\n      value: valueSSH,\n      msg: events[0].description\n    }, {\n      name: 'HTTP',\n      value: valueHTTP,\n      msg: events[1].description\n    }, {\n      name: 'Host',\n      value: valueHost,\n      msg: events[2].description\n    }];\n    return res.json(ret);\n  });\n};\n\nexport default handler;","map":{"version":3,"sources":["/Users/diterevan/Documents/projects/chain-lightning-server/pages/api/zabbix-events.js"],"names":["superagent","require","handler","req","res","events","get","set","end","err","response","JSON","parse","text","results","console","log","valueSSH","description","includes","valueHTTP","valueHost","ret","name","value","msg","json"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAIC,MAAJ;AACAL,EAAAA,UAAU,CACPM,GADH,CACO,mJADP,EAEGC,GAFH,CAEO,aAFP,EAEsB,uCAFtB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,GAJH,CAIO,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAEtBL,IAAAA,MAAM,GAAGM,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAApB,EAA0BC,OAA1B,CAAkC,CAAlC,EAAqCT,MAA9C;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,MAAxB;AAEA,QAAIY,QAAQ,GAAKZ,MAAM,CAAC,CAAD,CAAN,CAAUa,WAAV,CAAsBC,QAAtB,CAA+B,gBAA/B,CAAD,GAAqD,CAArD,GAAyD,CAAzE;AACA,QAAIC,SAAS,GAAIf,MAAM,CAAC,CAAD,CAAN,CAAUa,WAAV,CAAsBC,QAAtB,CAA+B,gBAA/B,CAAD,GAAqD,CAArD,GAAyD,CAAzE;AACA,QAAIE,SAAS,GAAIhB,MAAM,CAAC,CAAD,CAAN,CAAUa,WAAV,CAAsBC,QAAtB,CAA+B,gBAA/B,CAAD,GAAqD,CAArD,GAAyD,CAAzE;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B,EAAoC,MAApC,EAA4CZ,MAAM,CAAC,CAAD,CAAN,CAAUa,WAAtD;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,SAA3B,EAAsC,MAAtC,EAA8Cf,MAAM,CAAC,CAAD,CAAN,CAAUa,WAAxD;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,SAA3B,EAAsC,MAAtC,EAA8ChB,MAAM,CAAC,CAAD,CAAN,CAAUa,WAAxD;AAEA,QAAII,GAAG,GAAG,CACR;AAACC,MAAAA,IAAI,EAAE,KAAP;AAAeC,MAAAA,KAAK,EAAEP,QAAtB;AAAgCQ,MAAAA,GAAG,EAAEpB,MAAM,CAAC,CAAD,CAAN,CAAUa;AAA/C,KADQ,EAER;AAACK,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,KAAK,EAAEJ,SAAtB;AAAiCK,MAAAA,GAAG,EAAEpB,MAAM,CAAC,CAAD,CAAN,CAAUa;AAAhD,KAFQ,EAGR;AAACK,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,KAAK,EAAEH,SAAtB;AAAiCI,MAAAA,GAAG,EAAEpB,MAAM,CAAC,CAAD,CAAN,CAAUa;AAAhD,KAHQ,CAAV;AAKA,WAAOd,GAAG,CAACsB,IAAJ,CAASJ,GAAT,CAAP;AACD,GAvBH;AAwBD,CA1BD;;AA2BA,eAAepB,OAAf","sourcesContent":["const superagent = require('superagent');\nconst handler = (req, res) => {\n  let events\n  superagent\n    .get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT%20description%20FROM%20ZabbixAgent,%20ZabbixHTTP,%20ZabbixSSH%20limit%203')\n    .set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd')\n    .set('Accept', 'application/json')\n    .end((err, response) => {\n\n      events = JSON.parse(response.text).results[0].events\n      console.log('events: ', events)\n\n      let valueSSH  = (events[0].description.includes('is unreachable')) ? 0 : 1\n      let valueHTTP = (events[1].description.includes('is unreachable')) ? 0 : 1\n      let valueHost = (events[2].description.includes('is unreachable')) ? 0 : 1\n\n      console.log('valueSSH: ', valueSSH, 'msg:', events[0].description)\n      console.log('valueHTTP: ', valueHTTP, 'msg:', events[1].description)\n      console.log('valueHost: ', valueHost, 'msg:', events[2].description)\n\n      let ret = [\n        {name: 'SSH',  value: valueSSH, msg: events[0].description},\n        {name: 'HTTP', value: valueHTTP, msg: events[1].description},\n        {name: 'Host', value: valueHost, msg: events[2].description}\n      ]\n      return res.json(ret);\n    });\n};\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}