{"ast":null,"code":"import Cors from 'micro-cors';\nconst cors = Cors();\n\nconst superagent = require('superagent');\n\nconst handler = (req, res) => {\n  let events;\n  superagent.get('https://insights-api.newrelic.com/v1/accounts/2482859/query?nrql=SELECT+%60_raw%60%2C%60_sourcetype%60%2C%60source%60+FROM+splunkUpdateLogs%2C+splunkApacheAccess%2C+splunkApacheErrors%2C+splunkAuthLogs%2C+splunkHttp%2C+splunkKernel%2C+splunkSystemctl+WHERE+%60_raw%60+NOT+LIKE+%27%25CRON%25%27+LIMIT+6+').set('X-Query-Key', 'NRIQ-j7zJFckfarn9jsOB-nPscK5H6z0QCgHd').set('Accept', 'application/json').end((err, response) => {\n    events = JSON.parse(response.text).results[0].events;\n    let name1 = events[0]._sourcetype;\n    let eval1 = events[0]._raw;\n    let value1 = eval1.includes('not found or unable to stat') || eval1.includes('[:error]') || eval1.includes('deprecated') ? 0 : 1;\n    let name2 = events[1]._sourcetype;\n    let eval2 = events[1]._raw;\n    let value2 = eval2.includes('not found or unable to stat') || eval2.includes('[:error]') || eval2.includes('deprecated') ? 0 : 1;\n    let name3 = events[2]._sourcetype;\n    let eval3 = events[2]._raw;\n    let value3 = eval3.includes('not found or unable to stat') || eval3.includes('[:error]') || eval3.includes('deprecated') ? 0 : 1;\n    let name4 = events[3]._sourcetype;\n    let eval4 = events[3]._raw;\n    let value4 = eval4.includes('not found or unable to stat') || eval4.includes('[:error]') || eval4.includes('deprecated') ? 0 : 1;\n    let name5 = events[4]._sourcetype;\n    let eval5 = events[4]._raw;\n    let value5 = eval5.includes('not found or unable to stat') || eval5.includes('[:error]') || eval5.includes('deprecated') ? 0 : 1;\n    let name6 = events[5]._sourcetype;\n    let eval6 = events[5]._raw;\n    let value6 = eval6.includes('not found or unable to stat') || eval6.includes('[:error]') || eval6.includes('deprecated') ? 0 : 1;\n    console.log(\" => Events 1 : \", eval1);\n    console.log(\" => Events 2 : \", eval2);\n    console.log(\" => Events 3 : \", eval3);\n    console.log(\" => Events 4 : \", eval4);\n    console.log(\" => Events 5 : \", eval5);\n    console.log(\" => Events 6 : \", eval6);\n    let parsed = [{\n      name: name1,\n      value: value1,\n      msg: eval1\n    }, {\n      name: name2,\n      value: value2,\n      msg: eval2\n    }, {\n      name: name3,\n      value: value3,\n      msg: eval3\n    }, {\n      name: name4,\n      value: value4,\n      msg: eval4\n    }, {\n      name: name5,\n      value: value5,\n      msg: eval5\n    }, {\n      name: name6,\n      value: value6,\n      msg: eval6\n    }];\n    return res.json(events);\n  });\n};\n\nexport default cors(handler);","map":null,"metadata":{},"sourceType":"module"}